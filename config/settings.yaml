### Settings serial communication node
usb_port: "/dev/ttyUSB0"
publish_odom_tf: false
apply_vel_filter: true
odom_update_method: "odom"

wheel_acc_limit: 20.0
vel_filter_size: 5
x_joy_bias: -0.03
y_joy_bias: -0.015
joystick_deadzone: 0.07

#Covariances
#IMU covariance matrices, measured using rosbag during experiment while driving around and calculated using numpy. 0 entry means negligible.

#orientation_cov: [-1, -1, -1,
#                  -1, -1, -1,
#                  -1, -1, -1]

gyro_cov: [0.002, 0, 0,
           0, 0.002, 0,
           0, 0, 0.002]

acc_cov: [0.002, 0, 0,
          0, 0.002, 0,
          0, 0, 0.34]

pose_cov: [0.2, 0, 0, 0, 0, 0,
           0, 0.2, 0, 0, 0, 0,
           0, 0, 0.01, 0, 0, 0,
           0, 0, 0, 0.01, 0, 0,
           0, 0, 0, 0, 0.01, 0,
           0, 0, 0, 0, 0, 0.4]

twist_cov: [0.1, 0, 0, 0, 0, 0,
           0, 0.01, 0, 0, 0, 0,
           0, 0, 0.01, 0, 0, 0,
           0, 0, 0, 0.01, 0, 0,
           0, 0, 0, 0, 0.01, 0,
           0, 0, 0, 0, 0, 0.1]

#motor deadzone size, unit is pulse width, if set to 500, motor will run at full speed always no matter what cmd_vel is sent
deadzone_pulse_width: 0

#Controller parameters, With person
motor_kp: 3.0 #0.5
motor_ki: 2.0 #2.0 
motor_kd: 0.35 #0.02
motor_f: 1.2
frequency: 100.0 #controller frequency, default 5.0

#angular tolerance for commanded ang_vel vs actual ang_vel. 
#Lower tolerance (>0) reduces inaccuracy of actual path vs command path
# 0 to disable
w_tolerance: 0 #default 0

motor_max_accel: 0.5 #max ramping rate for motor velocity, default 0.3
pid_filter: 0.0 #exponential filter applied on pid output, increasing this decreases responsiveness

## calibration parameters odometry
calibration_v_angular: 0.88 #0.92
calibration_v_linear: 0.95 #0.92
calibration_cmd_ang: 1.0 #0.42
calibration_cmd_lin: 1.0 #0.7

## calibration parameters imu
bias_acc_x: 0.035
bias_acc_y: 0.015
bias_acc_z: 0 
bias_gyro_x: 0.0
bias_gyro_y: 0.0 
bias_gyro_z: -0.00325
cal_imu_acc: 1.0
cal_imu_gyro: 1.0


